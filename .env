# .env

# VULNERABILITIES
# - Insecure logging
INSECURE_LOGGING_RULE_ID=android/insecure-logging
INSECURE_LOGGING_PRECISION=high
INSECURE_LOGGING_NAME=Insecure Logging
INSECURE_LOGGING_DESC=Sensitive data such as credentials, personal information, or authentication tokens are improperly logged, potentially exposing them to unauthorized access.
INSECURE_LOGGING_SEV=7.5
INSECURE_LOGGING_CWE=external/cwe/cwe-346
INSECURE_LOGGING_REMEDIATION="### Recommendation\nAvoid logging sensitive information such as credentials, tokens, or personal user data. Use `Log.isLoggable()` to control logging levels in production builds.\n\n### Example (Vulnerable Code)\n```java\nLog.d(\"DEBUG\", \"User password: \" + password);\n```\n\n### Fixed Code\n```java\nif (Log.isLoggable(\"DEBUG\", Log.DEBUG)) {\n    Log.d(\"DEBUG\", \"User attempted login\");\n}\n```\n\n### References\n- [Android Developers: Log](https://developer.android.com/reference/android/util/Log)\n- [OWASP Mobile Top 10: Insecure Logging](https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures)\n\n### Evidence\n"

# - Root Detection
ROOT_DETECTION_RULE_ID=android/root-detection
ROOT_DETECTION_PRECISION=high
ROOT_DETECTION_NAME=Lack of Root Detection
ROOT_DETECTION_DESC=The application fails to check whether a device is rooted, allowing attackers to exploit elevated privileges. This can lead to security risks such as bypassing security controls.
ROOT_DETECTION_SEV=8.0
ROOT_DETECTION_CWE=external/cwe/cwe-937
INSECURE_LOGGING_REMEDIATION="### Recommendation\n Implement root detection mechanisms to prevent execution on rooted devices. Use libraries like Google's SafetyNet or check for root indicators such as SU binaries, system properties modifications, or unauthorized app installations. \n\n### Example (Vulnerable Code)\n```java\nLog.d(\"DEBUG\", \"User password: \" + password);\n```\n\n### Fixed Code\n```java\nif (Log.isLoggable(\"DEBUG\", Log.DEBUG)) {\n    Log.d(\"DEBUG\", \"User attempted login\");\n}\n```\n\n### References\n- [MASWE-0097](https://mas.owasp.org/MASWE/MASVS-RESILIENCE/MASWE-0097)\n\n### Evidence\n"

# - Emulator Detection 
EMULATOR_DETECTION_CWE=CWE-940
EMULATOR_DETECTION_SEV=High
EMULATOR_DETECTION_NAME=Emulator Detection Bypass
EMULATOR_DETECTION_DESC=Detection triggered when an emulator environment is identified, which may indicate an attempt to reverse engineer or bypass security measures.
EMULATOR_DETECTION_REFS=https://cwe.mitre.org/data/definitions/940.html
EMULATOR_DETECTION_REMEDIATION=Implement multiple emulator detection techniques, such as hardware checks, sensor readings, and network analysis, and take action when an emulator is detected.
#-